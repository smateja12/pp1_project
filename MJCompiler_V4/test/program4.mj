program MJProgram4
	
	const int nula = 0;
	const int jedan = 1;
	const int pet = 5;
	
	int niz[], niz2[], a, b;
	char nizch[];
	
	int x, y, z;
	
	int arr[], curr;
	bool flag;
{
	int k() int c; {
		c = 2;
		
		print(0);
		
		return c + 2;
	}
	
	void main()
		int bodovi;
		bool bt;
	{
		bodovi = 0;
		bodovi++;
		bodovi = bodovi + jedan;
		bodovi = bodovi * pet;
		bodovi--;
		print(bodovi);	// 9
		
				niz = new int[3];
		niz[nula] = jedan;
		niz[1] = 2;
		niz[niz[jedan]] = niz[niz[0]] * 3;
		bodovi = niz[2]/niz[0];
		print(bodovi);
		print(niz[2]);
		
		print(niz[0]);
		
		print(niz[1]);
		
		nizch = new char[3];
		nizch[0] = 'a';
		nizch[jedan] = 'b';
		nizch[pet - 3] = 'c';
		print(nizch[1]);
		print(nizch[jedan * 2]);
		
		a = 2;
		
		read(bodovi);
		bodovi = -bodovi + (pet * a / 2 - jedan) * bodovi - (3 % 2 + 3 * 2 - 3); 
		print(bodovi);
		
		print(1);
		
		x = 3; // iskaz dodele vrednosti
		
		print(x);
		
		y = 4 + 9;
		
		print(y);
		
		print(nula);
		
		// testiranje findAny funkcije
		
		arr = new int[3];
		arr[0] = 1;
		arr[1] = 2;
		arr[2] = 3;
		
		flag = arr.findAny(1 + 1);
		
		print(flag);
		
	}
}